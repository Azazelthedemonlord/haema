plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}


repositories {
    maven { url = "http://maven.fabricmc.net/" }
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
    maven {
        name = "AdrianTodt's Maven"
        url = "https://dl.bintray.com/adriantodt/maven"
    }
    maven { url 'https://maven.blamejared.com' }
    maven {
        name = "Ladysnake Libs"
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        url = "https://maven.theillusivec4.top"
    }
    maven {
        url = "https://repo.repsy.io/mvn/gandiber/geckolib"
    }
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release/"
    }
    maven {
        url = "https://maven.shedaniel.me"
    }
    maven {
        url = "https://maven.terraformersmc.com/releases/"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenLocal()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    modImplementation("io.github.ladysnake:Satin:${project.satin_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }
    include("io.github.ladysnake:Satin:${project.satin_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }

    modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }
    include "com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}"

    modImplementation("vazkii.patchouli:Patchouli:${project.patchouli_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }
    include "vazkii.patchouli:Patchouli:${project.patchouli_version}"

    modApi("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }
    modRuntime ("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }

    modImplementation("com.github.apace100:origins-fabric:${project.origins_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
        exclude module: "modmenu"
        exclude group: "io.github.OnyxStudios.Cardinal-Components-API"
    }
    modRuntime ("com.github.apace100:origins-fabric:${project.origins_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
        exclude module: "modmenu"
        exclude group: "io.github.OnyxStudios.Cardinal-Components-API"
    }

    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"
    include "io.github.OnyxStudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    include "io.github.OnyxStudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"

    modApi("me.sargunvohra.mcmods:autoconfig1u:${project.acu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.sargunvohra.mcmods:autoconfig1u:${project.acu_version}"

    modCompileOnly "com.github.Ladysnake:Rats-Mischief:${project.rats_version}"
    modCompileOnly "software.bernie.geckolib:geckolib-fabric-1.16.5:${project.geckolib_version}:dev"

    modImplementation "top.theillusivec4.somnus:somnus-fabric:${project.somnus_version}"
    include "top.theillusivec4.somnus:somnus-fabric:${project.somnus_version}"

    include "io.github.cottonmc:LibCD:${project.libcd_version}"
    modRuntime "io.github.cottonmc:LibCD:${project.libcd_version}"

    modImplementation "me.lucko:fabric-permissions-api:${project.fpa_version}"
    include "me.lucko:fabric-permissions-api:${project.fpa_version}"

    //modCompileOnly "curse.maven:bewitchment-394915:${project.bewitchment_version}"
    modCompileOnly "moriyashiine:bewitchment:1.16.5-11" // no jitpack, curse outdated

    modCompileOnly "com.github.Flemmli97:Flan:${project.flan_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    //include "io.github.ladysnake:vanguard:${vanguard_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"

/**
 * https://dev.to/williambl/mixins-kotlin-and-default-methods-why-they-don-t-work-together-417d
 */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += '-Xjvm-default=all'
    }
}
